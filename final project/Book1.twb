<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2 Extract' inline='true' name='dataengine.1ao1v6b17byvrq18u144a0yvyixv' version='9.2'>
      <connection class='dataengine' dbname='D:\myspace\data science\mydatascience\数据源\2.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Borough</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Borough]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Borough</remote-alias>
            <ordinal>0</ordinal>
            <family>2#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Bronx&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Unknown&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conditions]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Conditions</remote-alias>
            <ordinal>1</ordinal>
            <family>2#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>15</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Clear&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Snow&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dispatching_base_num</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dispatching_base_num]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Dispatching_base_num</remote-alias>
            <ordinal>2</ordinal>
            <family>2#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;B02512&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;B02836&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Events</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Events]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Events</remote-alias>
            <ordinal>3</ordinal>
            <family>2#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Fog&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Snow&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>1746</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>4</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>18716</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>235476522.0</statistic>
              <statistic aggregation='Avg' datatype='real'>12581.562406497114</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>27202</statistic>
              <statistic aggregation='Stdev' datatype='real'>7560.2553845961947</statistic>
              <statistic aggregation='StdevP' datatype='real'>7560.0534088435288</statistic>
              <statistic aggregation='Var' datatype='real'>57157461.48031576</statistic>
              <statistic aggregation='VarP' datatype='real'>57154407.544566654</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4032364448412.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>18716.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>18716.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preci</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Preci]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Preci</remote-alias>
            <ordinal>6</ordinal>
            <family>2#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>26</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;N/A&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TemperatureF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TemperatureF]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TemperatureF</remote-alias>
            <ordinal>7</ordinal>
            <family>2#csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>69</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>1.8999999999999999</statistic>
              <statistic aggregation='Max' datatype='real'>62.100000000000001</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZipCode</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ZipCode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ZipCode</remote-alias>
            <ordinal>8</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>134</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>10001</statistic>
              <statistic aggregation='Max' datatype='integer'>11693</statistic>
              <statistic aggregation='Count' datatype='integer'>18704</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>9</ordinal>
            <family>2#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>234</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Allerton/Pelham Gardens&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yorkville West&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>16</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>10</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>31</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>31</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>16</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>11</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>24</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>209144.0</statistic>
              <statistic aggregation='Avg' datatype='real'>11.174609959393033</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>23</statistic>
              <statistic aggregation='Stdev' datatype='real'>7.0448635785309852</statistic>
              <statistic aggregation='StdevP' datatype='real'>7.0446753717110671</statistic>
              <statistic aggregation='Var' datatype='real'>49.6301028401124</statistic>
              <statistic aggregation='VarP' datatype='real'>49.627451092792455</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>3265930.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>16</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>12</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>6</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numOutput</remote-name>
            <remote-type>2</remote-type>
            <local-name>[numOutput]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>numOutput</remote-alias>
            <ordinal>13</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2783</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>12453020.0</statistic>
              <statistic aggregation='Avg' datatype='real'>665.36759991451163</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>18860</statistic>
              <statistic aggregation='Stdev' datatype='real'>1001.537462771828</statistic>
              <statistic aggregation='StdevP' datatype='real'>1001.5107062308679</statistic>
              <statistic aggregation='Var' datatype='real'>1003077.2893354308</statistic>
              <statistic aggregation='VarP' datatype='real'>1003023.6946950518</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>27058427499.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workDay</remote-name>
            <remote-type>16</remote-type>
            <local-name>[workDay]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>workDay</remote-alias>
            <ordinal>14</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>13402.0</statistic>
              <statistic aggregation='Avg' datatype='real'>0.71607181021585808</statistic>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.45091444473135128</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.45090239834141738</statistic>
              <statistic aggregation='Var' datatype='real'>0.20332383646738283</statistic>
              <statistic aggregation='VarP' datatype='real'>0.20331297283004221</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>13402.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>2</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <family>2#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>2015</statistic>
              <statistic aggregation='Max' datatype='integer'>2015</statistic>
              <statistic aggregation='Count' datatype='integer'>18716</statistic>
              <statistic aggregation='Median' datatype='integer'>2015</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Conditions]' role='dimension' type='nominal' />
      <column datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
      <column datatype='string' name='[Events]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Preci]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[TemperatureF]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Zone]' role='dimension' type='nominal' />
      <column datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[numOutput]' role='measure' type='quantitative' />
      <column datatype='integer' name='[workDay]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\myspace\data science\mydatascience\数据源\2 Extract.tde' schema='Extract' tablename='Extract' update-time='04/30/2016 06:04:12 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='18716' timestamp-start='2016-04-30 06:04:12.567' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Borough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Borough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Borough</remote-alias>
              <ordinal>0</ordinal>
              <family>2#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bronx&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unknown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Conditions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Conditions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Conditions</remote-alias>
              <ordinal>1</ordinal>
              <family>2#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Clear&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Snow&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dispatching_base_num</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dispatching_base_num]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dispatching_base_num</remote-alias>
              <ordinal>2</ordinal>
              <family>2#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;B02512&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;B02836&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Events</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Events</remote-alias>
              <ordinal>3</ordinal>
              <family>2#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fog&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Snow&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1746</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>4</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18716</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>235476522.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12581.562406497114</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>27202</statistic>
                <statistic aggregation='Stdev' datatype='real'>7560.2553845961947</statistic>
                <statistic aggregation='StdevP' datatype='real'>7560.0534088435288</statistic>
                <statistic aggregation='Var' datatype='real'>57157461.48031576</statistic>
                <statistic aggregation='VarP' datatype='real'>57154407.544566654</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4032364448412.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>18716.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18716.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Preci</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Preci]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Preci</remote-alias>
              <ordinal>6</ordinal>
              <family>2#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;N/A&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TemperatureF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TemperatureF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TemperatureF</remote-alias>
              <ordinal>7</ordinal>
              <family>2#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.8999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>62.100000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZipCode</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ZipCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZipCode</remote-alias>
              <ordinal>8</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>194682628.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10408.609281437126</statistic>
                <statistic aggregation='Min' datatype='integer'>10001</statistic>
                <statistic aggregation='Max' datatype='integer'>11693</statistic>
                <statistic aggregation='Stdev' datatype='real'>565.13701963915139</statistic>
                <statistic aggregation='StdevP' datatype='real'>565.12191205324643</statistic>
                <statistic aggregation='Var' datatype='real'>319379.85096662259</statistic>
                <statistic aggregation='VarP' datatype='real'>319362.7754827172</statistic>
                <statistic aggregation='Count' datatype='integer'>18704</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2032348770088.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>9</ordinal>
              <family>2#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>234</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allerton/Pelham Gardens&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yorkville West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>16</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>10</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>274626.0</statistic>
                <statistic aggregation='Avg' datatype='real'>14.673327634109853</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>31</statistic>
                <statistic aggregation='Stdev' datatype='real'>8.8646747975072149</statistic>
                <statistic aggregation='StdevP' datatype='real'>8.8644379735808663</statistic>
                <statistic aggregation='Var' datatype='real'>78.582459265559592</statistic>
                <statistic aggregation='VarP' datatype='real'>78.578260587462466</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5500348.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>11</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>209144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.174609959393033</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.0448635785309852</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.0446753717110671</statistic>
                <statistic aggregation='Var' datatype='real'>49.6301028401124</statistic>
                <statistic aggregation='VarP' datatype='real'>49.627451092792455</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3265930.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>16</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>12</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>52352.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.7971788843770038</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.4295101916143189</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.4294720015820768</statistic>
                <statistic aggregation='Var' datatype='real'>2.0434993879292067</statistic>
                <statistic aggregation='VarP' datatype='real'>2.043390203307069</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>184682.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>numOutput</remote-name>
              <remote-type>2</remote-type>
              <local-name>[numOutput]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>numOutput</remote-alias>
              <ordinal>13</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2783</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>12453020.0</statistic>
                <statistic aggregation='Avg' datatype='real'>665.36759991451163</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>18860</statistic>
                <statistic aggregation='Stdev' datatype='real'>1001.537462771828</statistic>
                <statistic aggregation='StdevP' datatype='real'>1001.5107062308679</statistic>
                <statistic aggregation='Var' datatype='real'>1003077.2893354308</statistic>
                <statistic aggregation='VarP' datatype='real'>1003023.6946950518</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>27058427499.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>workDay</remote-name>
              <remote-type>16</remote-type>
              <local-name>[workDay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>workDay</remote-alias>
              <ordinal>14</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>13402.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.71607181021585808</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.45091444473135128</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.45090239834141738</statistic>
                <statistic aggregation='Var' datatype='real'>0.20332383646738283</statistic>
                <statistic aggregation='VarP' datatype='real'>0.20331297283004221</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13402.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>15</ordinal>
              <family>2#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37712740.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2015.0</statistic>
                <statistic aggregation='Min' datatype='integer'>2015</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>18716</statistic>
                <statistic aggregation='Median' datatype='integer'>2015</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>75991171100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Conditions]'>
          <groupfilter from='&quot;Clear&quot;' function='range' level='[Conditions]' to='&quot;Snow&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Dispatching_base_num]'>
          <groupfilter from='&quot;B02512&quot;' function='range' level='[Dispatching_base_num]' to='&quot;B02836&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Events]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Events]' member='%null%' />
            <groupfilter from='&quot;Fog&quot;' function='range' level='[Events]' to='&quot;Snow&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[Preci]'>
          <groupfilter from='&quot;0&quot;' function='range' level='[Preci]' to='&quot;N/A&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[TemperatureF]' included-values='in-range'>
          <min>1.8999999999999999</min>
          <max>62.100000000000001</max>
        </filter>
        <filter class='categorical' column='[ZipCode]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[ZipCode]' member='%null%' />
            <groupfilter from='10001' function='range' level='[ZipCode]' to='11693' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[Zone]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Zone]' member='&quot;Allerton/Pelham Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Alphabet City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Arrochar/Fort Wadsworth&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Astoria&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Auburndale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Baisley Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bath Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Battery Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Battery Park City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bay Ridge&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bay Terrace/Fort Totten&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bayside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bedford&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bedford Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bellerose&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Belmont&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bensonhurst East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bensonhurst West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bloomingdale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Boerum Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Borough Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Briarwood/Jamaica Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brighton Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bronx Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bronxdale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brooklyn Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brooklyn Navy Yard&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brownsville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bushwick North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bushwick South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Cambria Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Canarsie&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Carroll Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Central Harlem&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Central Harlem North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Central Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Chinatown&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;City Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Claremont/Bathgate&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Clinton East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Clinton Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Clinton West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Co-Op City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Cobble Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;College Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Columbia Street&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Coney Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Corona&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Country Club&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crotona Park East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crown Heights North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crown Heights South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Cypress Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Douglaston&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Downtown Brooklyn/MetroTech&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;DUMBO/Vinegar Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Dyker Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Chelsea&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Concourse/Concourse Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Elmhurst&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Flatbush/Farragut&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Flatbush/Remsen Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Flushing&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Harlem North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Harlem South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East New York&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East New York/Pennsylvania Avenue&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Tremont&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Williamsburg&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Eastchester&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Elmhurst&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Elmhurst/Maspeth&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Erasmus&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Far Rockaway&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Financial District North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Financial District South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flatbush/Ditmas Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flatiron&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flatlands&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flushing&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flushing Meadows-Corona Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Fordham South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Forest Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Forest Park/Highland Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Fort Greene&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Fresh Meadows&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Garment District&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Glen Oaks&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Glendale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Gowanus&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Gramercy&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Gravesend&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Great Kills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Green-Wood Cemetery&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Greenpoint&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Greenwich Village North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Greenwich Village South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Grymes Hill/Clifton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hamilton Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hammels/Arverne&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Heartland Village/Todt Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Highbridge&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hillcrest/Pomonok&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hollis&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Homecrest&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Howard Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hudson Sq&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hunts Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Inwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jackson Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jamaica&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jamaica Estates&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;JFK Airport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kensington&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kew Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kew Gardens Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kingsbridge Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kips Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;LaGuardia Airport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Laurelton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lenox Hill East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lenox Hill West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lincoln Square East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lincoln Square West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Little Italy/NoLiTa&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Long Island City/Hunters Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Long Island City/Queens Plaza&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Longwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lower East Side&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Madison&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Manhattan Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Manhattan Valley&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Manhattanville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Marble Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Marine Park/Mill Basin&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Maspeth&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Meatpacking/West Village West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Melrose South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Middle Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown Center&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Morningside Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Morrisania/Melrose&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Mott Haven/Port Morris&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Mount Hope&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Murray Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Murray Hill-Queens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;North Corona&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Norwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Oakland Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ocean Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ocean Parkway South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Old Astoria&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ozone Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Park Slope&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Parkchester&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Pelham Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Pelham Bay Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Pelham Parkway&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Penn Station/Madison Sq West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Port Richmond&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Prospect Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Prospect Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Prospect-Lefferts Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Queens Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Queensboro Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Queensbridge/Ravenswood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Randalls Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Red Hook&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Rego Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Richmond Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ridgewood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Riverdale/North Riverdale/Fieldston&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Roosevelt Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Rosedale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Saint Albans&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Schuylerville/Edgewater Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Seaport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sheepshead Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;SoHo&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Soundview/Bruckner&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Soundview/Castle Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Jamaica&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Ozone Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Williamsburg&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Springfield Gardens North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Springfield Gardens South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Spuyten Duyvil/Kingsbridge&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Starrett City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Steinway&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Stuy Town/Peter Cooper Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Stuyvesant Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sunnyside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sunset Park East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sunset Park West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sutton Place/Turtle Bay North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Times Sq/Theatre District&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;TriBeCa/Civic Center&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Two Bridges/Seward Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;UN/Turtle Bay South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Union Sq&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;University Heights/Morris Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Unknown&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper East Side North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper East Side South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper West Side North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper West Side South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Van Cortlandt Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Van Cortlandt Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Van Nest/Morris Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Washington Heights North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Washington Heights South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Chelsea/Hudson Yards&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Concourse&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Farms/Bronx River&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Westchester Village/Unionport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Westerleigh&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Whitestone&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Willets Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Williamsbridge/Olinville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Williamsburg (North Side)&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Williamsburg (South Side)&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Windsor Terrace&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Woodhaven&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Woodlawn/Wakefield&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Woodside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;World Trade Center&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Yorkville East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Yorkville West&quot;' />
          </groupfilter>
        </filter>
        <filter class='quantitative' column='[day]' included-values='in-range'>
          <min>1</min>
          <max>31</max>
        </filter>
        <filter class='quantitative' column='[hour]' included-values='in-range'>
          <min>0</min>
          <max>23</max>
        </filter>
        <filter class='quantitative' column='[month]' included-values='in-range'>
          <min>1</min>
          <max>6</max>
        </filter>
        <filter class='quantitative' column='[numOutput]' included-values='in-range'>
          <min>1</min>
          <max>18860</max>
        </filter>
        <filter class='quantitative' column='[workDay]' included-values='in-range'>
          <min>0</min>
          <max>1</max>
        </filter>
        <filter class='quantitative' column='[year]' included-values='in-range'>
          <min>2015</min>
          <max>2015</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.657676' measure-ordering='alphabetic' measure-percentage='0.342324' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='result' inline='true' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' version='9.2'>
      <connection class='textscan' directory='C:/Users/Chang Yu/Dropbox/ADS驾驾驾!/Final Project/visualiztion' filename='result.csv' password='' server='' username=''>
        <relation name='result#csv' table='[result#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Dispatching_base_num' ordinal='1' />
            <column datatype='datetime' name='Pickup_date' ordinal='2' />
            <column datatype='string' name='Affiliated_base_num' ordinal='3' />
            <column datatype='integer' name='LocationID' ordinal='4' />
            <column datatype='string' name='Borough' ordinal='5' />
            <column datatype='string' name='Zone' ordinal='6' />
            <column datatype='integer' name='ZipCode' ordinal='7' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dispatching_base_num</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dispatching_base_num]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>Dispatching_base_num</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Pickup_date]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>Pickup_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affiliated_base_num</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Affiliated_base_num]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>Affiliated_base_num</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocationID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocationID]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>LocationID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Borough</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Borough]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>Borough</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZipCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZipCode]</local-name>
            <parent-name>[result#csv]</parent-name>
            <remote-alias>ZipCode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Affiliated base num' datatype='string' name='[Affiliated_base_num]' role='dimension' type='nominal' />
      <column datatype='string' name='[Borough]' role='dimension' type='nominal' />
      <column caption='Dispatching base num' datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
      <column caption='Location ID' datatype='integer' name='[LocationID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pickup date' datatype='datetime' name='[Pickup_date]' role='dimension' type='ordinal' />
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Zone]' role='dimension' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pickup_date]' derivation='None' name='[none:Pickup_date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\myspace\data science\mydatascience\数据源\result.tde' schema='Extract' tablename='Extract' update-time='04/30/2016 05:14:57 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='14270479' timestamp-start='2016-04-30 05:14:57.407' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Affiliated_base_num</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Affiliated_base_num]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Affiliated_base_num</remote-alias>
              <ordinal>0</ordinal>
              <family>result#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>285</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;B00013&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;B02849&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>14108284</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Borough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Borough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Borough</remote-alias>
              <ordinal>1</ordinal>
              <family>result#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bronx&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unknown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Manhattan&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dispatching_base_num</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dispatching_base_num]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dispatching_base_num</remote-alias>
              <ordinal>2</ordinal>
              <family>result#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;B02512&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;B02836&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>3</ordinal>
              <family>result#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>101823292579960.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7135240.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>14270479</statistic>
                <statistic aggregation='Stdev' datatype='real'>4119532.5904066428</statistic>
                <statistic aggregation='StdevP' datatype='real'>4119532.4460690678</statistic>
                <statistic aggregation='Var' datatype='real'>16970548763422.465</statistic>
                <statistic aggregation='VarP' datatype='real'>16970547574215.799</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9.687114729245813e+20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LocationID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[LocationID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LocationID</remote-alias>
              <ordinal>4</ordinal>
              <family>result#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>262</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2169931581.0</statistic>
                <statistic aggregation='Avg' datatype='real'>152.05737529903516</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>265</statistic>
                <statistic aggregation='Stdev' datatype='real'>71.596196140407869</statistic>
                <statistic aggregation='StdevP' datatype='real'>71.596193631865688</statistic>
                <statistic aggregation='Var' datatype='real'>5126.0153017757557</statistic>
                <statistic aggregation='VarP' datatype='real'>5126.0149425716045</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>403104789377.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pickup_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Pickup_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pickup_date</remote-alias>
              <ordinal>6</ordinal>
              <family>result#csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-01-01 00:00:05#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-06-30 23:59:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZipCode</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ZipCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZipCode</remote-alias>
              <ordinal>7</ordinal>
              <family>result#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>7114</statistic>
                <statistic aggregation='Max' datatype='integer'>11694</statistic>
                <statistic aggregation='Count' datatype='integer'>14264215</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>8</ordinal>
              <family>result#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>260</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allerton/Pelham Gardens&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yorkville West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>14270479</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Affiliated_base_num]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Affiliated_base_num]' member='%null%' />
            <groupfilter from='&quot;B00013&quot;' function='range' level='[Affiliated_base_num]' to='&quot;B02849&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[Borough]'>
          <groupfilter from='&quot;Bronx&quot;' function='range' level='[Borough]' to='&quot;Unknown&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Dispatching_base_num]'>
          <groupfilter from='&quot;B02512&quot;' function='range' level='[Dispatching_base_num]' to='&quot;B02836&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[LocationID]'>
          <groupfilter from='1' function='range' level='[LocationID]' to='265' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[ZipCode]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[ZipCode]' member='%null%' />
            <groupfilter from='7114' function='range' level='[ZipCode]' to='11694' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[Zone]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Zone]' member='&quot;Allerton/Pelham Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Alphabet City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Arden Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Arrochar/Fort Wadsworth&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Astoria&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Astoria Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Auburndale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Baisley Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bath Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Battery Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Battery Park City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bay Ridge&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bay Terrace/Fort Totten&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bayside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bedford&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bedford Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bellerose&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Belmont&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bensonhurst East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bensonhurst West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bloomfield/Emerson Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bloomingdale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Boerum Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Borough Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Breezy Point/Fort Tilden/Riis Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Briarwood/Jamaica Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brighton Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Broad Channel&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bronx Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bronxdale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brooklyn Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brooklyn Navy Yard&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Brownsville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bushwick North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Bushwick South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Cambria Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Canarsie&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Carroll Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Central Harlem&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Central Harlem North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Central Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Charleston/Tottenville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Chinatown&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;City Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Claremont/Bathgate&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Clinton East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Clinton Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Clinton West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Co-Op City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Cobble Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;College Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Columbia Street&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Coney Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Corona&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Country Club&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crotona Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crotona Park East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crown Heights North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Crown Heights South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Cypress Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Douglaston&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Downtown Brooklyn/MetroTech&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;DUMBO/Vinegar Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Dyker Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Chelsea&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Concourse/Concourse Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Elmhurst&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Flatbush/Farragut&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Flatbush/Remsen Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Flushing&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Harlem North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Harlem South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East New York&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East New York/Pennsylvania Avenue&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Tremont&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;East Williamsburg&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Eastchester&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Elmhurst&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Elmhurst/Maspeth&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Eltingville/Annadale/Prince&apos;s Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Erasmus&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Far Rockaway&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Financial District North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Financial District South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flatbush/Ditmas Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flatiron&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flatlands&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flushing&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Flushing Meadows-Corona Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Fordham South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Forest Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Forest Park/Highland Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Fort Greene&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Fresh Meadows&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Freshkills Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Garment District&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Glen Oaks&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Glendale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Governor&apos;s Island/Ellis Island/Liberty Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Gowanus&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Gramercy&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Gravesend&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Great Kills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Great Kills Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Green-Wood Cemetery&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Greenpoint&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Greenwich Village North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Greenwich Village South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Grymes Hill/Clifton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hamilton Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hammels/Arverne&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Heartland Village/Todt Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Highbridge&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Highbridge Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hillcrest/Pomonok&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hollis&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Homecrest&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Howard Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hudson Sq&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Hunts Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Inwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Inwood Hill Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jackson Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jamaica&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jamaica Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Jamaica Estates&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;JFK Airport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kensington&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kew Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kew Gardens Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kingsbridge Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Kips Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;LaGuardia Airport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Laurelton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lenox Hill East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lenox Hill West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lincoln Square East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lincoln Square West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Little Italy/NoLiTa&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Long Island City/Hunters Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Long Island City/Queens Plaza&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Longwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Lower East Side&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Madison&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Manhattan Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Manhattan Valley&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Manhattanville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Marble Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Marine Park/Floyd Bennett Field&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Marine Park/Mill Basin&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Mariners Harbor&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Maspeth&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Meatpacking/West Village West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Melrose South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Middle Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown Center&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midtown South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Midwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Morningside Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Morrisania/Melrose&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Mott Haven/Port Morris&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Mount Hope&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Murray Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Murray Hill-Queens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;New Dorp/Midland Beach&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Newark Airport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;North Corona&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Norwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Oakland Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Oakwood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ocean Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ocean Parkway South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Old Astoria&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ozone Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Park Slope&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Parkchester&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Pelham Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Pelham Bay Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Pelham Parkway&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Penn Station/Madison Sq West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Port Richmond&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Prospect Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Prospect Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Prospect-Lefferts Gardens&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Queens Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Queensboro Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Queensbridge/Ravenswood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Randalls Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Red Hook&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Rego Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Richmond Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Ridgewood&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Riverdale/North Riverdale/Fieldston&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Rockaway Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Roosevelt Island&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Rosedale&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Rossville/Woodrow&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Saint Albans&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Saint George/New Brighton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Saint Michaels Cemetery/Woodside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Schuylerville/Edgewater Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Seaport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sheepshead Bay&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;SoHo&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Soundview/Bruckner&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Soundview/Castle Hill&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Beach/Dongan Hills&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Jamaica&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Ozone Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;South Williamsburg&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Springfield Gardens North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Springfield Gardens South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Spuyten Duyvil/Kingsbridge&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Stapleton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Starrett City&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Steinway&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Stuy Town/Peter Cooper Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Stuyvesant Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sunnyside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sunset Park East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sunset Park West&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Sutton Place/Turtle Bay North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Times Sq/Theatre District&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;TriBeCa/Civic Center&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Two Bridges/Seward Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;UN/Turtle Bay South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Union Sq&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;University Heights/Morris Heights&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Unknown&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper East Side North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper East Side South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper West Side North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Upper West Side South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Van Cortlandt Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Van Cortlandt Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Van Nest/Morris Park&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Washington Heights North&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Washington Heights South&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Brighton&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Chelsea/Hudson Yards&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Concourse&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Farms/Bronx River&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;West Village&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Westchester Village/Unionport&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Westerleigh&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Whitestone&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Willets Point&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Williamsbridge/Olinville&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Williamsburg (North Side)&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Williamsburg (South Side)&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Windsor Terrace&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Woodhaven&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Woodlawn/Wakefield&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Woodside&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;World Trade Center&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Yorkville East&quot;' />
            <groupfilter function='member' level='[Zone]' member='&quot;Yorkville West&quot;' />
          </groupfilter>
        </filter>
        <filter class='quantitative' column='[none:Pickup_date:qk]' included-values='in-range'>
          <min>#2015-01-01 00:00:05#</min>
          <max>#2015-06-30 23:59:00#</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.560166' measure-ordering='alphabetic' measure-percentage='0.439834' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.0soa9wt1ufsw6u178hhw20hk5njj]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='2 Extract' name='dataengine.1ao1v6b17byvrq18u144a0yvyixv' />
          </datasources>
          <datasource-dependencies datasource='dataengine.1ao1v6b17byvrq18u144a0yvyixv'>
            <column aggregation='Sum' datatype='real' name='[TemperatureF]' role='dimension' type='ordinal' />
            <column-instance column='[numOutput]' derivation='Avg' name='[avg:numOutput:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TemperatureF]' derivation='None' name='[none:TemperatureF:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[numOutput]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[avg:numOutput:qk]</rows>
        <cols>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:TemperatureF:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='2 Extract' name='dataengine.1ao1v6b17byvrq18u144a0yvyixv' />
          </datasources>
          <datasource-dependencies datasource='dataengine.1ao1v6b17byvrq18u144a0yvyixv'>
            <column-instance column='[numOutput]' derivation='Avg' name='[avg:numOutput:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workDay]' derivation='None' name='[none:workDay:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[numOutput]' role='measure' type='quantitative' />
            <column datatype='integer' name='[workDay]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='479' />
                <format attr='maxheight' value='479' />
                <format attr='minwidth' value='800' />
                <format attr='maxwidth' value='800' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[avg:numOutput:qk]</rows>
        <cols>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:workDay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='2 Extract' name='dataengine.1ao1v6b17byvrq18u144a0yvyixv' />
          </datasources>
          <datasource-dependencies datasource='dataengine.1ao1v6b17byvrq18u144a0yvyixv'>
            <column datatype='string' name='[Preci]' role='dimension' type='nominal' />
            <column-instance column='[numOutput]' derivation='Avg' name='[avg:numOutput:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preci]' derivation='None' name='[none:Preci:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[numOutput]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Preci:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Preci:nk]' />
              <groupfilter function='member' level='[none:Preci:nk]' member='&quot;N/A&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Preci:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[avg:numOutput:qk]</rows>
        <cols>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Preci:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='2 Extract' name='dataengine.1ao1v6b17byvrq18u144a0yvyixv' />
          </datasources>
          <datasource-dependencies datasource='dataengine.1ao1v6b17byvrq18u144a0yvyixv'>
            <column datatype='string' name='[Conditions]' role='dimension' type='nominal' />
            <column-instance column='[numOutput]' derivation='Avg' name='[avg:numOutput:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Conditions]' derivation='None' name='[none:Conditions:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[numOutput]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[avg:numOutput:qk]' />
              <text column='[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Conditions:nk]' />
              <color column='[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Conditions:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='2 Extract' name='dataengine.1ao1v6b17byvrq18u144a0yvyixv' />
          </datasources>
          <datasource-dependencies datasource='dataengine.1ao1v6b17byvrq18u144a0yvyixv'>
            <column datatype='integer' default-format='*00000' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[numOutput]' derivation='Avg' name='[avg:numOutput:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[hour]' role='dimension' type='ordinal' />
            <column-instance column='[ZipCode]' derivation='None' name='[none:ZipCode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[numOutput]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:ZipCode:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ZipCode:ok]' />
              <groupfilter function='member' level='[none:ZipCode:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:ZipCode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[avg:numOutput:qk]</rows>
        <cols>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:hour:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZipCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[ZipCode]' derivation='None' name='[none:ZipCode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[Longitude (generated)]' field-type='quantitative' max='-8127985.7878772477' min='-8307413.0247676698' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[Latitude (generated)]' field-type='quantitative' max='5017333.5575048383' min='4922993.6553986501' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#b1c0ac</color>
                <color>#9bb691</color>
                <color>#86ac78</color>
                <color>#72a261</color>
                <color>#60994c</color>
                <color>#4f8f39</color>
                <color>#408528</color>
                <color>#327b18</color>
                <color>#25710b</color>
                <color>#1b6800</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]' />
              <lod column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:ZipCode:ok]' />
              <geometry column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[Latitude (generated)]</rows>
        <cols>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column datatype='string' name='[Borough]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Borough]' derivation='None' name='[none:Borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]' />
              <text column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]' />
              <color column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column caption='Dispatching base num' datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Dispatching_base_num]' derivation='None' name='[none:Dispatching_base_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]</rows>
        <cols>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column caption='Dispatching base num' datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Pickup date' datatype='datetime' name='[Pickup_date]' role='dimension' type='ordinal' />
            <column-instance column='[Pickup_date]' derivation='Month' name='[mn:Pickup_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Dispatching_base_num]' derivation='None' name='[none:Dispatching_base_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]</rows>
        <cols>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[mn:Pickup_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Pickup date' datatype='datetime' name='[Pickup_date]' role='dimension' type='ordinal' />
            <column-instance column='[Pickup_date]' derivation='Hour' name='[hr:Pickup_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]</rows>
        <cols>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[hr:Pickup_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column caption='Dispatching base num' datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Pickup date' datatype='datetime' name='[Pickup_date]' role='dimension' type='ordinal' />
            <column-instance column='[Pickup_date]' derivation='Hour' name='[hr:Pickup_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Dispatching_base_num]' derivation='None' name='[none:Dispatching_base_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[hr:Pickup_date:ok]' value='29' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]</rows>
        <cols>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[hr:Pickup_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column caption='Dispatching base num' datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Pickup date' datatype='datetime' name='[Pickup_date]' role='dimension' type='ordinal' />
            <column-instance column='[Pickup_date]' derivation='Month' name='[mn:Pickup_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Dispatching_base_num]' derivation='None' name='[none:Dispatching_base_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[mn:Pickup_date:ok]' value='19' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]</rows>
        <cols>([textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk] / [textscan.0soa9wt1ufsw6u178hhw20hk5njj].[mn:Pickup_date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='textscan.0soa9wt1ufsw6u178hhw20hk5njj' />
          </datasources>
          <datasource-dependencies datasource='textscan.0soa9wt1ufsw6u178hhw20hk5njj'>
            <column datatype='string' name='[Borough]' role='dimension' type='nominal' />
            <column caption='Dispatching base num' datatype='string' name='[Dispatching_base_num]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Pickup date' datatype='datetime' name='[Pickup_date]' role='dimension' type='ordinal' />
            <column-instance column='[Pickup_date]' derivation='Month' name='[mn:Pickup_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Borough]' derivation='None' name='[none:Borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dispatching_base_num]' derivation='None' name='[none:Dispatching_base_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]</rows>
        <cols>([textscan.0soa9wt1ufsw6u178hhw20hk5njj].[mn:Pickup_date:ok] / [textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Sheet 5' show-title='true' w='84000' x='0' y='0' />
              <zone h='50000' id='7' name='Sheet 7' show-title='true' w='84000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='23375' id='6' name='Sheet 5' pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='53000' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 2' show-title='true' w='53000' x='0' y='0' />
            </zone>
            <zone h='100000' id='7' name='Sheet 3' show-title='true' w='31000' x='53000' y='0'>
              <layout-cache type-h='fixed' type-w='fixed' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='7750' id='6' name='Sheet 2' pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]' type='color' w='16000' x='84000' y='0' />
              <zone h='20375' id='8' name='Sheet 3' pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]' type='color' w='16000' x='84000' y='7750' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='527' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='125' h='13797' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='81327' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='18258'>
              <flipboard active-id='7' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Looking through the change our hours in a day. We can see that the number of trips becomes higher in a 7-9 am, 4-7pm. This trend tells us why the cost of Uber is higher than average time in commuting time. The indicate us the range of daily hours should also be considerate here. ' captured-sheet='Sheet 18' id='1' />
                  <story-point caption='In the terrible weather such as heavy rain, heavy snow and so on, the trips obviously increase a lot. In the conditions such as rain or snow, there is also an incensement. Surely, we need to take consideration of this in our final project. ' captured-sheet='Sheet 17' id='3' />
                  <story-point caption='The volume of perception is also displayed blew. However, as the grown of the volume, the number trips still in the condition from rise to fall. The relationship is really hard to tell through visualization, so we keep these data and test it in Model ' captured-sheet='Sheet 16' id='4' />
                  <story-point caption='In this graph, we can see the relationship between workday and number of trips. In no-workday, we can see the increase of trips is so obvious. We really should take it in to our analysis. ' captured-sheet='Sheet 14' id='5' />
                  <story-point caption='Through the graph of temperature with number of trips. We can see their relationship is not so obvious. ' captured-sheet='Sheet 13' id='6' />
                  <story-point caption='When we put the number of bases in to time scope. Increase of trips mainly happened on B02683 and B02765. The chang of other parts seems not so obvious. &#10;We also compare the trend to Dispatch Bases in hours of a day for similar analysis. &#10;We gather Zone, Base and Date based on month together to get the graph to display their relationship.' captured-sheet='Dashboard 1' id='7' />
                  <story-point caption='As what you can see, the different number of dispatch’s tasks is totally different, it is necessary to make them into categories before we cast them in to analysis.' captured-sheet='Sheet 4' id='8' />
                  <story-point caption='The graph will show the number of Uber trips from the darker or lighter of the color in these zips. We can easily tell that the number of trips is affect by its area. So it’s necessary to take the variables zip code in to consideration. ' captured-sheet='Dashboard 2' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='50'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:ZipCode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[yr:Pickup_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[yr:Pickup_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Affiliated_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[yr:Pickup_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[mn:Pickup_date:ok]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Affiliated_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[yr:Pickup_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[:Measure Names]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[hr:Pickup_date:qk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:ZipCode:ok]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[tmn:Pickup_date:qk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[yr:Pickup_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Affiliated_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[yr:Pickup_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:TemperatureF:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='292'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:workDay:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Preci:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Conditions:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:Conditions:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:ZipCode:ok]</field>
            <field>[dataengine.1ao1v6b17byvrq18u144a0yvyixv].[none:hour:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Dispatching_base_num:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <highlight>
            <color-one-way>
              <field>[textscan.0soa9wt1ufsw6u178hhw20hk5njj].[none:Borough:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      2ctOqh4H/h9poLT7JBQUEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      /2LMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      zwQ0VdO0/w8XDM/yf8bomwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      yVCrcdIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      +P9CheJpY3OgwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      9/8Ce63Wem7MYEkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
      WTTUBu7a7/8B0Iufz3WHfHIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      8fPL2UP8/3DoKyAi/WYlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      8P8DjxilaAhUGDoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
